
@mixin sz($point) {
	$sz-min393: "(min-width: 393px)";
    $sz-min480: "(min-width: 480px)";
	$sz-min576: "(min-width: 576px)";
    $sz-min680: "(min-width: 680px)";
    $sz-min768: "(min-width: 768px)";
    $sz-min860: "(min-width: 860px)";
    $sz-min992: "(min-width: 992px)";
    $sz-min1100: "(min-width: 1100px)";
    $sz-min1200: "(min-width: 1200px)";
    $sz-min1280: "(min-width: 1280px)";
    $sz-min1366: "(min-width: 1366px)";
    $sz-min1440: "(min-width: 1440px)";
    $sz-min1680: "(min-width: 1680px)";
    $sz-min1860: "(min-width: 1860px)";
	
	@if $point == min393 {
		@media #{$sz-min393} {@content;}
	}

    @if $point == min480 {
		@media #{$sz-min480} {@content;}
	}

    @if $point == min576 {
		@media #{$sz-min576} {@content;}
	}

    @if $point == min680 {
		@media #{$sz-min680} {@content;}
	}

    @if $point == min768 {
		@media #{$sz-min768} {@content;}
	}

    @if $point == min860 {
		@media #{$sz-min860} {@content;}
	}

    @if $point == min992 {
		@media #{$sz-min992} {@content;}
	}

    @if $point == min1100 {
		@media #{$sz-min1100} {@content;}
	}

	@if $point == min1200 {
		@media #{$sz-min1200} {@content;}
	}
	
    @if $point == min1280 {
		@media #{$sz-min1280} {@content;}
	}

    @if $point == min1366 {
		@media #{$sz-min1366} {@content;}
	}

    @if $point == min1440 {
		@media #{$sz-min1440} {@content;}
	}

    @if $point == min1680 {
		@media #{$sz-min1680} {@content;}
	}

    @if $point == min1860 {
		@media #{$sz-min1860} {@content;}
	}

}

@mixin fonts($color, $font-size, $font-weight, $font-family) {
	color: $color;
	font-size: $font-size;
	font-weight: $font-weight;
	font-family: $font-family;
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );

    @if $pseudo {

        &::before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }

    } @else {
        padding-top: $padding;
    }

}

@mixin transform($property) {
	transform: $property;
	-webkit-transform: $property;
	-moz-transform: $property;
	-ms-transform: $property;
	-o-transform: $property;
}

@mixin transition($property, $duration, $timing, $delay) {
	transition: $property $duration $timing $delay;
	-webkit-transition: $property $duration $timing $delay;
	-moz-transition: $property $duration $timing $delay;
	-ms-transition: $property $duration $timing $delay;
	-o-transition: $property $duration $timing $delay;
}

@mixin bRadius($radius) {
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
}

@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin hardware($backface: true, $perspective: 1000) {

    @if $backface {
        backface-visibility: hidden;
    }
    
    perspective: $perspective;
}

// $ui-step: 4px;

// @mixin ui-space($direction, $size) {

//     @if ($direction == top) {
//         margin-top: $ui-step * $size;
//     }

//     @if ($direction == bottom) {
//         margin-bottom: $ui-step *$size;
//     }

//     @if ($direction == left) {
//         margin-left: $ui-step * $size;
//     }

//     @if ($direction == right) {
//         margin-right: $ui-step * $size;
//     }

// }

// .element {
//     @include ui-step(top, 2);

//     height: $ui-step * 10;

// }

